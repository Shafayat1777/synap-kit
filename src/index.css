@import url('https://fonts.googleapis.com/css2?family=Geist:wght@100..900&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');

@import 'tailwindcss';
@config '../tailwind.config.ts';

@custom-variant dark (&:where(data-theme=dark, [data-theme=dark] *));

@theme {
  --font-size: 0.875rem;
  --color-accent: hsl(183 100% 36%);

  --font-inter: 'Inter', sans-serif;
  --font-geist: 'Geist', sans-serif;

  --radius-lg: 8px;
  --radius-md: 6px;
  --radius-sm: 4px;
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    @apply border-border;
  }

  /* html {
    font-size: var(--font-size);
  } */
}

@utility bg-gradient {
  @apply from-base-100 to-base-150 bg-linear-to-r;
}

@utility bg-gradient-accent {
  @apply from-accent/20 to-accent/30 bg-linear-to-r text-white;
}

@utility sb-red {
  @apply border border-red-500;
}

@utility sb-green {
  @apply border border-green-500;
}

@utility sb-yellow {
  @apply border border-yellow-500;
}

@utility sb-blue {
  @apply border border-blue-500;
}

@utility sb-purple {
  @apply border border-purple-500;
}

@layer base {
  :root {
    font-family: Inter, sans-serif;
    scroll-behavior: smooth;
  }

  .handsontable td,
  .handsontable th {
    @apply border-border! bg-base-100! first:border-l-transparent! last:border-r-transparent!;
  }

  .handsontable td {
    @apply p-0!;
  }

  .handsontable th {
    @apply p-0!;
  }
}
@layer base {
  body {
    @apply border-border bg-background font-inter text-foreground;
  }

  button {
    @apply !cursor-pointer;
  }
}

@theme inline {
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  --animate-shine: shine 8s ease-in-out infinite;
  /*
  ---break---
*/
  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  /*
  ---break---
*/
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }

  @keyframes shine {
    from {
      background-position: 200% 0;
    }
    to {
      background-position: -200% 0;
    }
  }
}
